% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_event_list.R
\name{get_event_list}
\alias{get_event_list}
\title{Getting the workflow data from a single participation}
\usage{
get_event_list(
  json_data,
  project_modules,
  scenario_elements,
  questionnaire_elements,
  module_specific = TRUE,
  idle_time = 20,
  event_codes = lucar::event_codes,
  tool_codes = lucar::tool_codes,
  debug_mode = FALSE
)
}
\arguments{
\item{json_data}{The log data for a single participation in form of a nested list}

\item{project_modules}{Dataframe including the running numbers and ids for the project modules}

\item{scenario_elements}{Dataframe including the codes for all existing scenario elements, which are used in the event list.}

\item{questionnaire_elements}{Dataframe including the codes for all questionnaire elements, which are used in the event list as well as in the summary results.}

\item{module_specific}{If TRUE the workflow is split into separate lists for each module element}

\item{idle_time}{Numeric describing after how many seconds an event is considered as idle.}

\item{event_codes}{Dataframe with the event codes that are used to structure the log data}

\item{tool_codes}{Dataframe with the tool codes that are used to assign each used tool to a common code}

\item{debug_mode}{If TRUE the internal hash IDs for the project elements and additional lower level data are included}
}
\value{
A list including the workflow data
}
\description{
Takes the log data from a single participation and returns a list describing the workflow.
}
\examples{
\dontrun{
json_file = "participation_logdata.json"
json_data <- rjson::fromJSON(file=json_file)
workflow <- get_workflow(json_data)
}

}
